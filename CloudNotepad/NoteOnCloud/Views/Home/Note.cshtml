@{
    ViewBag.Title = "Note";
}

<h2>Note</h2>

<div class="container">
    <textarea id="txtNote" rows="20" cols="500" placeholder="Enter your note"></textarea>
    <input type="hidden" id="url" value="test"/>
</div>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var noteHub = $.connection.noteHub;
            var noteChanged = false;
            var sentText = '';
            //var textToBeSent = '';
            var currentText = '';

            // Create a function that the hub can call back to display messages.
            noteHub.client.updateNoteOnPage = function (name, message, operation) {
                // Add the message to the page.
                if (operation === 1) {
                    $('#txtNote').append(htmlEncode(message));
                    sentText = sentText.concat(message);
                }
                if (operation === 2) {
                    $('#txtNote').val(htmlEncode(message));
                    sentText = message;
                } 
            };

            // Get the user name and store it to prepend to messages.
            //$('#url').val(prompt('Enter the URL:', ''));

            // Set initial focus to message input box.
            $('#txtNote').focus();

            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#txtNote').on('input propertychange change', function (eventData) {
                    console.log('Textarea Change');
                    noteChanged = true;
                    currentText = $('#txtNote').val();
                    //textToBeSent = currentText.replace(sentText, '');
                });
                setInterval(updateServerNote, 50);
            });

            function updateServerNote() {
                // Only update server if we have a new movement
                if (noteChanged) {
                    
                    var textToBeSent = '';
                    if (currentText.indexOf(sentText) === -1) {
                        //update complete string
                        textToBeSent = currentText;
                        noteHub.server.updateNote($('#url').val(), textToBeSent, 2);
                        sentText = textToBeSent;
                    }
                    else {
                        textToBeSent = currentText.replace(sentText, '');
                        noteHub.server.updateNote($('#url').val(), textToBeSent, 1);
                        sentText = sentText.concat(textToBeSent);
                    }
                    
                    noteChanged = false;

                    
                }
            }
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}

